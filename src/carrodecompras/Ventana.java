package carrodecompras;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marco
 */
public class Ventana extends javax.swing.JFrame {
    Catalogo catalogo = new Catalogo();;
    Carrito carroDeCompras = new Carrito();
    /**
     * Creates new form Ventana.
     */
    public Ventana() {
        initComponents();
        jLCatalogo.setFont(new java.awt.Font("Arial", 1, 14));
        jLCatalogo.setText("Catalogo");
        jLCarroDeTienda.setFont(new java.awt.Font("Arial", 1, 14));
        jLCarroDeTienda.setText("Carro de compras");
        jLTotal.setFont(new java.awt.Font("Arial", 1, 20));
        jLTotal.setText("Total =");
        jTFCantidadTotal.setText("");
        jTFCantidadTotal.setEditable(false);
        jTFCantidad.setEnabled(false);
        jCBActivarComprar.setText("Comprar");
        jCBActivarComprar.setEnabled(true);
        jCBActivarComprar.setSelected(false);
        jBAgregarAlCarroDeCompras.setEnabled(false);
        jBEliminarDelCatalogo.setEnabled(false);
        jLCantidad.setEnabled(false);
        jLCantidad.setText("Cantidad:");
        jTFCantidad.setText("");
        jTFCantidad.setEnabled(false);
        jCBActivarAgregarDatos.setText("Agregar datos");
        jCBActivarAgregarDatos.setEnabled(true);
        jCBActivarAgregarDatos.setSelected(false);
        jBAgregarAlCatalogo.setEnabled(false);
        jLCodigoDeBarras.setEnabled(false);
        jLCodigoDeBarras.setText("Codigo de barras:");
        jTFCodigoDeBarras.setText("");
        jTFCodigoDeBarras.setEnabled(false);
        jLTitulo.setEnabled(false);
        jLTitulo.setText("Titulo de pelicula:");
        jTFTitulo.setText("");
        jTFTitulo.setEnabled(false);
        jLActorPrincipal.setEnabled(false);
        jLActorPrincipal.setText("Actor principal:");
        jTFActorPrincipal.setText("");
        jTFActorPrincipal.setEnabled(false);
        jLGenero.setEnabled(false);
        jLGenero.setText("Genero:");
        jTFGenero.setText("");
        jTFGenero.setEnabled(false);
        jLPrecio.setEnabled(false);
        jLPrecio.setText("Precio:");
        jTFPrecio.setText("");
        jTFPrecio.setEnabled(false);
        jLCodigoDeBarrasVacio.setVisible(false);
        jLTituloVacio.setVisible(false);
        jLActorPrincipalVacio.setVisible(false);
        jLGeneroVacio.setVisible(false);
        jLPrecioVacio.setVisible(false);
        jLCantidadVacio.setVisible(false);
        //Catalogo catalogo = new Catalogo(null);
        jTCatalogo.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTCatalogo = new javax.swing.JTable();
        jBAgregarAlCarroDeCompras = new javax.swing.JButton();
        jBAgregarAlCatalogo = new javax.swing.JButton();
        jBEliminarDelCatalogo = new javax.swing.JButton();
        jLCatalogo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTCarroDeCompras = new javax.swing.JTable();
        jLCarroDeTienda = new javax.swing.JLabel();
        jTFCodigoDeBarras = new javax.swing.JTextField();
        jLCodigoDeBarras = new javax.swing.JLabel();
        jTFTitulo = new javax.swing.JTextField();
        jLTitulo = new javax.swing.JLabel();
        jLGenero = new javax.swing.JLabel();
        jTFGenero = new javax.swing.JTextField();
        jTFActorPrincipal = new javax.swing.JTextField();
        jLActorPrincipal = new javax.swing.JLabel();
        jTFPrecio = new javax.swing.JTextField();
        jLPrecio = new javax.swing.JLabel();
        jCBActivarAgregarDatos = new javax.swing.JCheckBox();
        jLCodigoDeBarrasVacio = new javax.swing.JLabel();
        jLTituloVacio = new javax.swing.JLabel();
        jLActorPrincipalVacio = new javax.swing.JLabel();
        jLGeneroVacio = new javax.swing.JLabel();
        jLPrecioVacio = new javax.swing.JLabel();
        jBEliminarDelCarro = new javax.swing.JButton();
        jTFCantidad = new javax.swing.JTextField();
        jLCantidad = new javax.swing.JLabel();
        jLCantidadVacio = new javax.swing.JLabel();
        jCBActivarComprar = new javax.swing.JCheckBox();
        jLTotal = new javax.swing.JLabel();
        jTFCantidadTotal = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTCatalogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTCatalogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTCatalogoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTCatalogo);

        jBAgregarAlCarroDeCompras.setText("Comprar");
        jBAgregarAlCarroDeCompras.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jBAgregarAlCarroDeComprasMouseMoved(evt);
            }
        });
        jBAgregarAlCarroDeCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarAlCarroDeComprasActionPerformed(evt);
            }
        });

        jBAgregarAlCatalogo.setText("Agregar");
        jBAgregarAlCatalogo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jBAgregarAlCatalogoMouseMoved(evt);
            }
        });
        jBAgregarAlCatalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarAlCatalogoActionPerformed(evt);
            }
        });

        jBEliminarDelCatalogo.setText("Eliminar");
        jBEliminarDelCatalogo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jBEliminarDelCatalogoMouseMoved(evt);
            }
        });
        jBEliminarDelCatalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarDelCatalogoActionPerformed(evt);
            }
        });

        jLCatalogo.setText("jLabel1");

        jTCarroDeCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTCarroDeCompras);

        jLCarroDeTienda.setText("jLabel1");

        jTFCodigoDeBarras.setText("jTextField1");

        jLCodigoDeBarras.setText("Codigo de Barras:");

        jTFTitulo.setText("jTextField1");

        jLTitulo.setText("Titulo:");

        jLGenero.setText("Genero");

        jTFGenero.setText("jTextField1");

        jTFActorPrincipal.setText("jTextField1");

        jLActorPrincipal.setText("Actor Principal");

        jTFPrecio.setText("jTextField1");

        jLPrecio.setText("Precio");

        jCBActivarAgregarDatos.setText("jCheckBox1");
        jCBActivarAgregarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBActivarAgregarDatosActionPerformed(evt);
            }
        });

        jLCodigoDeBarrasVacio.setText("jLabel1");

        jLTituloVacio.setText("jLabel1");

        jLActorPrincipalVacio.setText("jLabel1");

        jLGeneroVacio.setText("jLabel1");

        jLPrecioVacio.setText("jLabel1");

        jBEliminarDelCarro.setText("Eliminar");

        jTFCantidad.setText("jTextField1");

        jLCantidad.setText("Cantidad");

        jLCantidadVacio.setText("jLabel1");

        jCBActivarComprar.setText("jCheckBox1");
        jCBActivarComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBActivarComprarActionPerformed(evt);
            }
        });

        jLTotal.setText("Total:");

        jTFCantidadTotal.setText("jTextField1");

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLTitulo)
                            .addComponent(jLActorPrincipal)
                            .addComponent(jLCodigoDeBarras)
                            .addComponent(jCBActivarAgregarDatos))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLActorPrincipalVacio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLTituloVacio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTFCodigoDeBarras, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                    .addComponent(jTFTitulo)
                                    .addComponent(jTFActorPrincipal)
                                    .addComponent(jLCodigoDeBarrasVacio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLGenero)
                                    .addComponent(jLPrecio)
                                    .addComponent(jLCantidad))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTFCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTFPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                                .addComponent(jTFGenero)
                                                .addComponent(jLPrecioVacio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLGeneroVacio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLCantidadVacio, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(270, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jCBActivarComprar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBAgregarAlCatalogo)
                                .addGap(18, 18, 18)
                                .addComponent(jBEliminarDelCatalogo)
                                .addGap(18, 18, 18)
                                .addComponent(jBAgregarAlCarroDeCompras)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLCatalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLCarroDeTienda))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBEliminarDelCarro)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFCantidadTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLCatalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAgregarAlCarroDeCompras)
                    .addComponent(jBAgregarAlCatalogo)
                    .addComponent(jBEliminarDelCatalogo)
                    .addComponent(jCBActivarAgregarDatos)
                    .addComponent(jCBActivarComprar))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLCodigoDeBarras)
                            .addComponent(jTFCodigoDeBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(jLCodigoDeBarrasVacio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLTitulo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLTituloVacio))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLGenero)
                            .addComponent(jTFGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(jLGeneroVacio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLPrecio)
                            .addComponent(jTFPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLPrecioVacio)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFActorPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLActorPrincipal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLActorPrincipalVacio))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLCantidad)
                            .addComponent(jTFCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLCantidadVacio)))
                .addGap(27, 27, 27)
                .addComponent(jLCarroDeTienda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFCantidadTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBEliminarDelCarro)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jBAgregarAlCatalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarAlCatalogoActionPerformed
        boolean cb = false;  
        String codigoDeBarras = jTFCodigoDeBarras.getText();
        String titulo = jTFTitulo.getText();
        String actorPrincipal = jTFActorPrincipal.getText();
        String genero = jTFGenero.getText();
        double precio = Double.parseDouble(jTFPrecio.getText());
        String titElimDCat = "Eliminar del catalogo";
        String titCarrDComp = "Carro de compras";
        String titCodDBarr = "Codigo de barras";
        String titTituDPel = "Titulo de pelicula";
        String titActPrinci = "Actor Principal";
        String titGen = "Genero";
        String titPre = "Precio";
        int i;
        String codigoBarras, titu, actor, gene;
        double prec;
        ArrayList<Pelicula> peliculas;
        Pelicula pelicula = new Pelicula(codigoDeBarras, titulo, actorPrincipal, genero, precio, 0, 0);
        catalogo.agregarPrelicula(pelicula);
        Object[] titulos = {titElimDCat, titCarrDComp, titCodDBarr, titTituDPel, titActPrinci, titGen, titPre};
        Object[][] datos = new Object[0][0];
        DefaultTableModel modelo = new DefaultTableModel(datos, titulos) {
            @Override
            public boolean isCellEditable(int row, int columna){
                if (columna == 0) {
                    return true;
                }
                if (columna == 1) {
                    return true;
                }
                return false;
            }
            @Override
            public Class getColumnClass(int columna)
            {
                if (columna == 0) {
                    return Boolean.class;
                }
                if (columna == 1)  {
                    return Boolean.class;
                }
                return Object.class;
            }
        };
        peliculas = catalogo.getPeliculas();
        for(i = 0; i < peliculas.size(); i++) {
            codigoBarras = peliculas.get(i).getCodigoDeBarras();
            titu = peliculas.get(i).getTitulo();
            actor = peliculas.get(i).getActorPrincipal();
            gene = peliculas.get(i).getGenero();
            prec = peliculas.get(i).getPrecio();
            Object[] fila = {cb, cb, codigoBarras, titu, actor, gene, prec};
            modelo.addRow(fila);
        }
        jTCatalogo.setModel(modelo);
    }//GEN-LAST:event_jBAgregarAlCatalogoActionPerformed

    private void jCBActivarAgregarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBActivarAgregarDatosActionPerformed
        if(jCBActivarAgregarDatos.isSelected() == true) {
            jBAgregarAlCatalogo.setEnabled(true);
            jLCodigoDeBarras.setEnabled(true);
            jTFCodigoDeBarras.setEnabled(true);
            jLTitulo.setEnabled(true);
            jTFTitulo.setEnabled(true);
            jLActorPrincipal.setEnabled(true);
            jTFActorPrincipal.setEnabled(true);
            jLGenero.setEnabled(true);
            jTFGenero.setEnabled(true);
            jLPrecio.setEnabled(true);
            jTFPrecio.setEnabled(true);
        }
        if(jCBActivarAgregarDatos.isSelected() == false) {
            jBAgregarAlCatalogo.setEnabled(false);
            jLCodigoDeBarras.setEnabled(false);
            jTFCodigoDeBarras.setEnabled(false);
            jLTitulo.setEnabled(false);
            jTFTitulo.setEnabled(false);
            jLActorPrincipal.setEnabled(false);
            jTFActorPrincipal.setEnabled(false);
            jLGenero.setEnabled(false);
            jTFGenero.setEnabled(false);
            jLPrecio.setEnabled(false);
            jTFPrecio.setEnabled(false);
            jLCodigoDeBarrasVacio.setVisible(false);
            jLTituloVacio.setVisible(false);
            jLActorPrincipalVacio.setVisible(false);
            jLGeneroVacio.setVisible(false);
            jLPrecioVacio.setVisible(false);
            jTFCodigoDeBarras.setText("");
            jTFTitulo.setText("");
            jTFActorPrincipal.setText("");
            jTFGenero.setText("");
            jTFPrecio.setText("");
        }
    }//GEN-LAST:event_jCBActivarAgregarDatosActionPerformed

    private void jBAgregarAlCatalogoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBAgregarAlCatalogoMouseMoved
        int algunoEsFalso = 0;
        if ( jTFCodigoDeBarras.getText().isEmpty() && jCBActivarAgregarDatos.isSelected() == true ) {
            jLCodigoDeBarrasVacio.setText("*Favor de ingresar codigo de barras");
            jLCodigoDeBarrasVacio.setForeground(Color.red);
            jLCodigoDeBarrasVacio.setVisible(true);
            //jBAgregarAlCatalogo.setEnabled(false);
            algunoEsFalso++;
        }else {
            if (jCBActivarAgregarDatos.isSelected() == true) {
                //jBAgregarAlCatalogo.setEnabled(true);
                jLCodigoDeBarrasVacio.setVisible(false);
                algunoEsFalso--;
            }
        }
        if ( jTFTitulo.getText().isEmpty() && jCBActivarAgregarDatos.isSelected() == true ) {
            jLTituloVacio.setText("*Favor de ingresar titulo de la pelicula");
            jLTituloVacio.setForeground(Color.red);
            jLTituloVacio.setVisible(true);
            //jBAgregarAlCatalogo.setEnabled(false);
            algunoEsFalso++;
        }else {
            if (jCBActivarAgregarDatos.isSelected() == true) {
                //jBAgregarAlCatalogo.setEnabled(true);
                jLTituloVacio.setVisible(false);
                algunoEsFalso--;
            }
        }
        if ( jTFActorPrincipal.getText().isEmpty() && jCBActivarAgregarDatos.isSelected() == true ) {
            jLActorPrincipalVacio.setText("*Favor de ingresar actor principal de la pelicula");
            jLActorPrincipalVacio.setForeground(Color.red);
            jLActorPrincipalVacio.setVisible(true);
            //jBAgregarAlCatalogo.setEnabled(false);
            algunoEsFalso++;
        }else {
            if (jCBActivarAgregarDatos.isSelected() == true) {
                //jBAgregarAlCatalogo.setEnabled(true);
                jLActorPrincipalVacio.setVisible(false);
                algunoEsFalso--;
            }
        }
        if ( jTFGenero.getText().isEmpty() && jCBActivarAgregarDatos.isSelected() == true ) {
            jLGeneroVacio.setText("*Favor de ingresar genero de la pelicula");
            jLGeneroVacio.setForeground(Color.red);
            jLGeneroVacio.setVisible(true);
            //jBAgregarAlCatalogo.setEnabled(false);
            algunoEsFalso++;
        } else {
            if (jCBActivarAgregarDatos.isSelected() == true) {
                //jBAgregarAlCatalogo.setEnabled(true);
                jLGeneroVacio.setVisible(false);
                algunoEsFalso--;
            }
        }
        if ( jTFPrecio.getText().isEmpty() && jCBActivarAgregarDatos.isSelected() == true ) {
            jLPrecioVacio.setText("*Favor de ingresar precio de la pelicula");
            jLPrecioVacio.setForeground(Color.red);
            jLPrecioVacio.setVisible(true);
            //jBAgregarAlCatalogo.setEnabled(false);
            algunoEsFalso++;
        }else {
            if (jCBActivarAgregarDatos.isSelected() == true) {
                //jBAgregarAlCatalogo.setEnabled(true);
                jLPrecioVacio.setVisible(false);
                algunoEsFalso--;
            }
        }
        if (jCBActivarAgregarDatos.isSelected() == true && algunoEsFalso == 0) {
                jBAgregarAlCatalogo.setEnabled(true);
        }
        if (jCBActivarAgregarDatos.isSelected() == true && algunoEsFalso > 0) {
                jBAgregarAlCatalogo.setEnabled(false);
        }
    }//GEN-LAST:event_jBAgregarAlCatalogoMouseMoved

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        boolean cb = false;  
        int i;
        String codigoBarras, titu, actor, gene;
        double prec;
        String titElimDCat = "Eliminar del catalogo";
        String titCarrDComp = "Carro de compras";
        String titCodDBarr = "Codigo de barras";
        String titTituDPel = "Titulo de pelicula";
        String titActPrinci = "Actor Principal";
        String titGen = "Genero";
        String titPre = "Precio";
        String titcant = "Cantidad";
        String titsubTot = "Subtotal";
        String titElimDCar = "Eliminar del carro";
        ArrayList<Pelicula> peliculas;
        Object[] titulos = {titElimDCat, titCarrDComp, titCodDBarr, titTituDPel, titActPrinci, titGen, titPre};
        Object[][] datos = new Object[0][0];
        DefaultTableModel modelo = new DefaultTableModel(datos, titulos) {
            @Override
            public boolean isCellEditable(int row, int columna) {
                if (columna == 0) {
                    return true;
                }
                if (columna == 1) {
                    return true;
                }
                return false;
            }
            @Override
            public Class getColumnClass(int columna)
            {
                if (columna == 0) {
                    return Boolean.class;
                }
                if (columna == 1)  {
                    return Boolean.class;
                }
                return Object.class;
            }
        };
        peliculas = catalogo.getPeliculas();
        for(i = 0; i < peliculas.size(); i++) {
            codigoBarras = peliculas.get(i).getCodigoDeBarras();
            titu = peliculas.get(i).getTitulo();
            actor = peliculas.get(i).getActorPrincipal();
            gene = peliculas.get(i).getGenero();
            prec = peliculas.get(i).getPrecio();
            Object[] fila = {cb, cb, codigoBarras, titu, actor, gene, prec};
            modelo.addRow(fila);
        }
        jTCatalogo.setModel(modelo);
        
        Object[] titulosCarro = {titElimDCar, titCodDBarr, titTituDPel, titPre, titcant, titsubTot};
        Object[][] datosCarro = new Object[0][0];
        DefaultTableModel modeloCarro = new DefaultTableModel(datosCarro, titulosCarro) {
            @Override
            public boolean isCellEditable(int row, int columna) {
                if (columna == 0) {
                    return true;
                }
                if (columna == 1) {
                    return true;
                }
                return false;
            }
            @Override
            public Class getColumnClass(int columna)
            {
                if (columna == 0) {
                    return Boolean.class;
                }
                return Object.class;
            }
        };
        jTCarroDeCompras.setModel(modeloCarro);
    }//GEN-LAST:event_formWindowOpened

    private void jBEliminarDelCatalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarDelCatalogoActionPerformed
        boolean cb = false;
        double prec;
        String titElimDCat = "Eliminar del catalogo";
        String titCarrDComp = "Carro de compras";
        String titCodDBarr = "Codigo de barras";
        String titTituDPel = "Titulo de pelicula";
        String titActPrinci = "Actor Principal";
        String titGen = "Genero";
        String titPre = "Precio";
        ArrayList<Pelicula> peliculas;
        int i, j;
        String codigoBarras, titu, actor, gene, preci;
        Pelicula pelicula = new Pelicula();
        boolean activo;
        for (i = 0; i < jTCatalogo.getRowCount(); i++) {
            activo = Boolean.valueOf(jTCatalogo.getValueAt(i,0).toString());
            System.out.println("Activo: " + activo);
            if (activo) {
                for (j = 2; j < jTCatalogo.getColumnCount(); j++) {
                    if (j == 2) {
                        codigoBarras = jTCatalogo.getValueAt(i,j).toString();
                        pelicula.setCodigoDeBarras(codigoBarras);
                    }
                    if (j == 3) {
                        titu = jTCatalogo.getValueAt(i,j).toString();
                        pelicula.setTitulo(titu);
                    }
                    if (j == 4) {
                        actor = jTCatalogo.getValueAt(i,j).toString();
                        pelicula.setActorPrincipal(actor);
                    }
                    if (j == 5) {
                        gene = jTCatalogo.getValueAt(i,j).toString();
                        pelicula.setGenero(gene);
                    }
                    if (j == 6) {
                        preci = jTCatalogo.getValueAt(i,j).toString();
                        pelicula.setPrecio(Double.parseDouble(preci));
                    }
                }
            catalogo.eliminarPelicula(pelicula);
            }
        }
        Object[] titulos = {titElimDCat, titCarrDComp, titCodDBarr, titTituDPel, titActPrinci, titGen, titPre};
        Object[][] datos = new Object[0][0];
        DefaultTableModel modelo = new DefaultTableModel(datos, titulos) {
            @Override
            public boolean isCellEditable(int row, int columna) {
                if (columna == 0) {
                    return true;
                }
                if (columna == 1) {
                    return true;
                }
                return false;
            }
            @Override
            public Class getColumnClass(int columna){
                if (columna == 0) {
                    return Boolean.class;
                }
                if (columna == 1)  {
                    return Boolean.class;
                }
                return Object.class;
            }
        };
        peliculas = catalogo.getPeliculas();
        for (i = 0; i < peliculas.size(); i++) {
            codigoBarras = peliculas.get(i).getCodigoDeBarras();
            titu = peliculas.get(i).getTitulo();
            actor = peliculas.get(i).getActorPrincipal();
            gene = peliculas.get(i).getGenero();
            prec = peliculas.get(i).getPrecio();
            Object[] fila = {cb, cb, codigoBarras, titu, actor, gene, prec};
            modelo.addRow(fila);
        }
        jTCatalogo.setModel(modelo);
    }//GEN-LAST:event_jBEliminarDelCatalogoActionPerformed

    private void jCBActivarComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBActivarComprarActionPerformed
        if (jCBActivarComprar.isSelected() == true) {
            jBAgregarAlCarroDeCompras.setEnabled(true);
            jLCantidad.setEnabled(true);
            jTFCantidad.setEnabled(true);
        }
        if (jCBActivarComprar.isSelected() == false) {
            jBAgregarAlCarroDeCompras.setEnabled(false);
            jLCantidad.setEnabled(false);
            jTFCantidad.setEnabled(false);
            jLCantidadVacio.setText("");
        }
    }//GEN-LAST:event_jCBActivarComprarActionPerformed

    private void jBAgregarAlCarroDeComprasMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBAgregarAlCarroDeComprasMouseMoved
        if ( jTFCantidad.getText().isEmpty() && jCBActivarComprar.isSelected() == true ) {
            jLCantidadVacio.setText("*Favor de ingresar cantidad de peliculas a comprar");
            jLCantidadVacio.setForeground(Color.red);
            jLCantidadVacio.setVisible(true);
            jBAgregarAlCarroDeCompras.setEnabled(false);
        }else {
            if (jCBActivarComprar.isSelected() == true) {
                jBAgregarAlCarroDeCompras.setEnabled(true);
                jLCodigoDeBarrasVacio.setVisible(false);
                jLCantidadVacio.setText("");
            }
        }
    }//GEN-LAST:event_jBAgregarAlCarroDeComprasMouseMoved

    private void jBAgregarAlCarroDeComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarAlCarroDeComprasActionPerformed
        boolean cb = false, activo;
        String preci;
        String titElimDCar = "Eliminar del carro";
        String titCodDBarr = "Codigo de barras";
        String titTituDPel = "Titulo de pelicula";
        String titPre = "Precio";
        String titCant = "Cantidad";
        String titSub = "Subtotal";
        int i, j, tamArregloPeliculas;
        String codBarras, titu;
        double prec, subTotal, total = 0, cantidad;
        ArrayList<Pelicula> peliculas = new ArrayList<Pelicula>();
        //carroDeCompras = new Carrito();
        Pelicula pelicula;
        Object[] titulos = {titElimDCar, titCodDBarr, titTituDPel, titPre, titCant, titSub};
        Object[][] datos = new Object[0][0];
        DefaultTableModel modeloCarro = new DefaultTableModel(datos, titulos) {
            @Override
            public boolean isCellEditable(int row, int columna){
                if (columna == 0) {
                    return true;
                }
                if (columna == 1) {
                    return true;
                }
                return false;
            }
            @Override
            public Class getColumnClass(int columna)
            {
                if (columna == 0) {
                    return Boolean.class;
                }
                return Object.class;
            }
        };
        for (i = 0; i < jTCatalogo.getRowCount(); i++) {
            activo = Boolean.valueOf(jTCatalogo.getValueAt(i,1).toString());
            pelicula = new Pelicula();
            if (activo) {
                for (j = 2; j < jTCatalogo.getColumnCount(); j++) {
                    if (j == 2) {
                        codBarras = jTCatalogo.getValueAt(i,j).toString();
                        pelicula.setCodigoDeBarras(codBarras);
                    }
                    if (j == 3) {
                        titu = jTCatalogo.getValueAt(i,j).toString();
                        pelicula.setTitulo(titu);
                    }
                    if (j == 6) {
                        preci = jTCatalogo.getValueAt(i,j).toString();
                        pelicula.setPrecio(Double.parseDouble(preci));
                    }
                }
                pelicula.setCantidad(Double.parseDouble(jTFCantidad.getText()));
                peliculas.add(pelicula);
            }
        }
        if (carroDeCompras.regresaPeliculas().size() > 0) {
            for (int k = 0; k < peliculas.size(); k++) {
                carroDeCompras.agregarPelicula(peliculas.get(k));
            }
        }
        if (carroDeCompras.regresaPeliculas().isEmpty()) {
            carroDeCompras.agregarPeliculas(peliculas);
        }
            for (i = 0; i < carroDeCompras.regresaPeliculas().size(); i++) {
                codBarras = carroDeCompras.regresaPeliculas().get(i).getCodigoDeBarras();
                titu = carroDeCompras.regresaPeliculas().get(i).getTitulo();
                prec = carroDeCompras.regresaPeliculas().get(i).getPrecio();
                cantidad = carroDeCompras.regresaPeliculas().get(i).getCantidad();
                subTotal = carroDeCompras.subTotal(i);
                Object[] fila = {cb, codBarras, titu, prec, cantidad, subTotal};
                modeloCarro.addRow(fila);
            }
            total = carroDeCompras.total();
        jTCarroDeCompras.setModel(modeloCarro);
        jTFCantidadTotal.setEnabled(true);
        jTFCantidadTotal.setText(String.valueOf(total));
    }//GEN-LAST:event_jBAgregarAlCarroDeComprasActionPerformed

    private void jBEliminarDelCatalogoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBEliminarDelCatalogoMouseMoved
        boolean activo;
        int i;
        for (i = 0; i < jTCatalogo.getRowCount(); i++) {
            activo = Boolean.valueOf(jTCatalogo.getValueAt(i,0).toString());
            if (activo) {
                jBEliminarDelCatalogo.setEnabled(true);
                break;
            } else {
                jBEliminarDelCatalogo.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jBEliminarDelCatalogoMouseMoved

    private void jTCatalogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTCatalogoMouseClicked
        boolean activo;
        int i;
        for (i = 0; i < jTCatalogo.getRowCount(); i++) {
            activo = Boolean.valueOf(jTCatalogo.getValueAt(i,0).toString());
            if (activo) {
                jBEliminarDelCatalogo.setEnabled(true);
                break;
            } else {
                jBEliminarDelCatalogo.setEnabled(false);
            }
        }
        for (i = 0; i < jTCatalogo.getRowCount(); i++) {
            activo = Boolean.valueOf(jTCatalogo.getValueAt(i,1).toString());
            if (activo) {
                jCBActivarComprar.setSelected(true);
                jLCantidad.setEnabled(true);
                jBAgregarAlCarroDeCompras.setEnabled(true);
                jTFCantidad.setEnabled(true);
                break;
            } else {
                jCBActivarComprar.setSelected(false);
                jLCantidad.setEnabled(false);
                jBAgregarAlCarroDeCompras.setEnabled(false);
                jTFCantidad.setEnabled(false);
                jTFCantidad.setText("");
            }
        }
    }//GEN-LAST:event_jTCatalogoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jBAgregarAlCarroDeCompras;
    private javax.swing.JButton jBAgregarAlCatalogo;
    private javax.swing.JButton jBEliminarDelCarro;
    private javax.swing.JButton jBEliminarDelCatalogo;
    private javax.swing.JCheckBox jCBActivarAgregarDatos;
    private javax.swing.JCheckBox jCBActivarComprar;
    private javax.swing.JLabel jLActorPrincipal;
    private javax.swing.JLabel jLActorPrincipalVacio;
    private javax.swing.JLabel jLCantidad;
    private javax.swing.JLabel jLCantidadVacio;
    private javax.swing.JLabel jLCarroDeTienda;
    private javax.swing.JLabel jLCatalogo;
    private javax.swing.JLabel jLCodigoDeBarras;
    private javax.swing.JLabel jLCodigoDeBarrasVacio;
    private javax.swing.JLabel jLGenero;
    private javax.swing.JLabel jLGeneroVacio;
    private javax.swing.JLabel jLPrecio;
    private javax.swing.JLabel jLPrecioVacio;
    private javax.swing.JLabel jLTitulo;
    private javax.swing.JLabel jLTituloVacio;
    private javax.swing.JLabel jLTotal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTCarroDeCompras;
    private javax.swing.JTable jTCatalogo;
    private javax.swing.JTextField jTFActorPrincipal;
    private javax.swing.JTextField jTFCantidad;
    private javax.swing.JTextField jTFCantidadTotal;
    private javax.swing.JTextField jTFCodigoDeBarras;
    private javax.swing.JTextField jTFGenero;
    private javax.swing.JTextField jTFPrecio;
    private javax.swing.JTextField jTFTitulo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
